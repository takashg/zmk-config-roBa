#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Japanese {
            bindings = <&kp LANG1>;
            key-positions = <11 12>;
        };

        English {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <19 20>;
        };

        z {
            bindings = <&mo 3>;
            key-positions = <10 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W         &kp E           &kp R         &kp T                                      &kp Y      &kp U  &kp I       &kp O    &kp P
&lt 4 A     &kp S         &mt LEFT_ALT D  &kp F         &kp G      &kp K_MUTE       &none          &kp H      &kp J  &mt RALT K  &kp L    &kp LCTRL
&kp Z       &kp X         &kp C           &kp V         &kp B      &none            &none          &kp N      &kp M  &kp COMMA   &kp DOT  &kp RSHIFT
&kp ESCAPE  &kp LEFT_GUI  &mo 5           &lt 1 DELETE  &lt 2 TAB  &lt 3 SPACE      &kp BACKSPACE  &kp ENTER                              &none
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                           &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &kp K_MUTE      &none   &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10  &trans          &trans  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK
&kp F11       &kp F12       &trans        &trans        &trans   &trans          &trans  &trans                                                  &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        FUNCTION {
            bindings = <
&trans       &trans              &kp LA(UP_ARROW)  &trans               &trans                                   &trans    &trans              &kp UP_ARROW  &kp PRINTSCREEN      &trans
&kp LC(TAB)  &kp LA(LEFT_ARROW)  &trans            &kp LA(RIGHT_ARROW)  &kp LC(LS(TAB))  &kp K_MUTE      &none   &kp HOME  &kp LEFT_ARROW      &kp DOWN      &kp RIGHT_ARROW      &kp END
&trans       &trans              &trans            &trans               &trans           &trans          &trans  &trans    &kp LG(LEFT_ARROW)  &kp LG(M)     &kp LG(RIGHT_ARROW)  &trans
&trans       &trans              &trans            &trans               &trans           &trans          &trans  &trans                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE       &none              &none      &kp BACKSLASH  &kp AMPERSAND                      &trans  &trans             &kp MINUS      &kp TILDE         &kp PIPE
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH   &kp DOLLAR     &kp PERCENT    &none       &trans  &trans  &kp SQT            &kp LPAR       &kp RPAR          &kp AT
&kp LEFT_SHIFT   &kp COLON          &kp COLON  &kp SEMI       &trans         &trans      &trans  &trans  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION
&trans           &trans             &trans     &trans         &trans         &trans      &trans  &trans                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans           &trans    &kp LC(T)  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LC(LS(TAB))  &mkp MB1  &trans     &mkp MB2  &kp LC(TAB)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans           &mkp MB4  &kp LC(W)  &mkp MB5  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp C_AC_ZOOM_IN   &trans              &kp LG(UP_ARROW)  &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp C_AC_ZOOM_OUT  &kp LG(LEFT_ARROW)  &kp LG(M)         &kp LG(RIGHT_ARROW)  &kp LC(W)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans             &kp LA(LEFT_ARROW)  &trans            &kp LA(RIGHT_ARROW)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};
