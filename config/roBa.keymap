#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SHORTCUTS 1

//#define SCROLL 1

#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        CAPS_LOCK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 12>;
        };

        ONISHI_LAYER {
            bindings = <&tog 6>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W             &kp E    &kp R            &kp T                                        &kp Y        &kp U    &kp I      &kp O              &kp P
&mt LEFT_CONTROL A  &mt LEFT_SHIFT S  &lt 4 D  &mt LEFT_ALT F   &kp G        &kp K_MUTE2      &tog 6         &kp H        &lt 1 J  &lt 4 K    &mt RIGHT_SHIFT L  &mt RIGHT_CONTROL MINUS
&mt LEFT_SHIFT Z    &kp X             &kp C    &kp V            &kp B        &none            &none          &kp N        &kp M    &kp COMMA  &kp PERIOD         &mt RIGHT_SHIFT LEFT_WIN
&none               &none             &none    &lt 1 LA(GRAVE)  &lt 2 SPACE  &lt 3 TAB        &kp BACKSPACE  &lt 5 ENTER                                         &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_DOWN2 K_VOLUME_UP2>;
        };

        SHORTCUTS {
            bindings = <
&trans               &kp LC(W)            &kp LA(UP_ARROW)  &kp LA(F4)           &trans                           &trans  &trans              &kp LG(UP_ARROW)  &trans               &trans
&kp LC(LS(TAB))      &kp LA(LEFT_ARROW)   &kp LG(TAB)       &kp LA(RIGHT_ARROW)  &kp LC(TAB)  &trans      &none   &trans  &kp LG(LEFT_ARROW)  &kp LG(E)         &kp LG(RIGHT_ARROW)  &trans
&kp LA(PRINTSCREEN)  &kp LG(PRINTSCREEN)  &kp LG(LS(S))     &kp PRINTSCREEN      &trans       &trans      &trans  &trans  &trans              &kp LG(M)         &trans               &trans
&trans               &trans               &trans            &trans               &trans       &trans      &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp F11  &kp F12  &kp COLON  &trans  &trans                           &kp EQUAL     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
&kp F1   &kp F2   &kp F3     &kp F4  &kp F5   &kp K_MUTE      &none   &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&kp F6   &kp F7   &kp F8     &kp F9  &kp F10  &trans          &trans  &kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK
&tog 2   &trans   &trans     &trans  &trans   &trans          &trans  &trans                                                  &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYMBOL {
            bindings = <
&trans           &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE       &kp GRAVE                           &trans         &kp HASH   &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans
&kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH  &kp DOLLAR  &trans      &trans      &kp AMPERSAND  &kp SLASH  &kp COLON          &kp SEMICOLON     &kp QUESTION
&kp AT           &kp LESS_THAN         &kp GREATER_THAN       &kp PERCENT    &trans      &trans      &trans      &trans         &kp TILDE  &kp COMMA          &kp PERIOD        &kp UNDER
&trans           &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans         &trans      &trans      &kp DELETE  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE_BLUETOOTH {
            bindings = <
&bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &none   &none     &none  &none     &none
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &none         &none         &none         &none       &none   &none   &mkp MB1  &none  &mkp MB2  &kp RIGHT_CONTROL
&kp LEFT_SHIFT    &none           &none         &none         &none         &none       &none   &none   &mkp MB4  &none  &mkp MB5  &kp RIGHT_SHIFT
&bt BT_CLR_ALL    &bt BT_CLR      &none         &trans        &trans        &trans      &trans  &trans                             &none
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&trans            &trans               &kp PAGE_UP    &trans   &trans                      &trans  &trans          &kp UP_ARROW  &trans           &trans
&kp LEFT_CONTROL  &mt LEFT_SHIFT HOME  &kp PAGE_DOWN  &kp END  &trans  &none       &none   &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &kp RIGHT_CONTROL
&kp LSHFT         &trans               &trans         &trans   &trans  &trans      &trans  &trans  &trans          &trans        &trans           &kp RIGHT_SHIFT
&trans            &trans               &trans         &trans   &trans  &trans      &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        ONISHI_RAYOUT {
            bindings = <
&kp Q               &kp L             &kp U    &kp MINUS       &kp SEMI                        &kp F   &kp W    &kp R    &kp Y              &kp P
&mt LEFT_CONTROL E  &mt LEFT_SHIFT I  &lt 4 A  &mt LEFT_ALT O  &kp PERIOD  &trans      &tog 6  &kp K   &lt 1 T  &lt 4 N  &mt RIGHT_SHIFT S  &mt RIGHT_CONTROL H
&mt Z LEFT_SHIFT    &kp X             &kp C    &kp V           &kp COMMA   &trans      &trans  &kp G   &kp D    &kp M    &kp J              &mt B RIGHT_SHIFT
&none               &none             &none    &kp LA(GRAVE)   &trans      &trans      &trans  &trans                                       &kp ESCAPE
            >;
        };
    };
};
