#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SHORTCUTS 1

//#define SCROLL 1

#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Japanese {
            bindings = <&kp LANG1>;
            key-positions = <11 12>;
        };

        English {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <19 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W  &kp E           &kp R        &kp T                                          &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LEFT_CONTROL A  &kp S  &mt LEFT_ALT D  &lt 4 F      &kp G      &kp K_MUTE           &none          &kp H        &kp J  &lt 1 K    &kp L    &mt RIGHT_CONTROL MINUS
&kp Z               &kp X  &kp C           &kp V        &kp B      &kp LANG1            &kp LANG2      &kp N        &kp M  &kp COMMA  &kp DOT  &mt RSHIFT LEFT_WIN
&kp LA(GRAVE)       &none  &none           &lt 1 SPACE  &lt 2 TAB  &lt 3 BACKSPACE      &kp BACKSPACE  &lt 5 ENTER                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SHORTCUTS {
            bindings = <
&trans               &kp LA(F4)           &kp LC(W)         &trans               &trans                           &kp LC(PLUS)   &trans              &kp LG(UP_ARROW)  &trans               &trans
&kp LC(LS(TAB))      &kp LA(LEFT_ARROW)   &kp LA(UP_ARROW)  &kp LA(RIGHT_ARROW)  &kp LC(TAB)  &trans      &trans  &kp LC(MINUS)  &kp LG(LEFT_ARROW)  &kp LG(E)         &kp LG(RIGHT_ARROW)  &trans
&trans               &trans               &trans            &trans               &trans       &trans      &trans  &trans         &trans              &kp LG(M)         &trans               &trans
&kp LA(PRINTSCREEN)  &kp LG(PRINTSCREEN)  &kp LG(LS(S))     &trans               &trans       &trans      &trans  &trans                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                           &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &kp K_MUTE      &none   &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10  &trans          &trans  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK
&kp F11       &kp F12       &trans        &trans        &trans   &trans          &trans  &trans                                                  &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE       &kp DOUBLE_QUOTES  &kp HASH         &kp DOLLAR     &kp PERCENT                      &kp AMPERSAND  &kp SINGLE_QUOTE  &kp MINUS      &kp TILDE         &kp PIPE
&kp EXCLAMATION  &kp SEMI           &kp COLON        &kp BACKSLASH  &trans       &trans      &trans  &kp QUESTION   &kp ASTERISK      &kp LPAR       &kp RPAR          &kp AT
&trans           &kp UNDER          &kp RIGHT_BRACE  &kp PLUS       &trans       &trans      &trans  &kp EQUAL      &trans            &kp LESS_THAN  &kp GREATER_THAN  &kp SLASH
&trans           &kp LEFT_BRACE     &kp RIGHT_BRACE  &trans         &trans       &trans      &trans  &trans                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &none  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &mkp MB1  &none  &mkp MB2  &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &none  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                             &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                          &trans    &trans          &kp UP_ARROW  &trans           &trans
&kp LEFT_CONTROL  &trans        &trans        &trans        &trans        &kp K_MUTE      &trans  &kp HOME  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &kp END
&kp LSHFT         &trans        &trans        &trans        &trans        &trans          &trans  &trans    &trans          &trans        &trans           &trans
&bt BT_CLR        &trans        &trans        &trans        &trans        &trans          &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };
    };
};
