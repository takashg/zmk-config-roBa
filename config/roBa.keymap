#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SHORTCUTS 1

//#define SCROLL 1

#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Japanese {
            bindings = <&kp LANG1>;
            key-positions = <11 12>;
        };

        English {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <19 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E           &kp R            &kp T                                        &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LEFT_CONTROL A  &kp S         &mt LEFT_ALT D  &kp F            &kp G        &kp K_MUTE2      &tog 6         &kp H        &kp J  &lt 4 K    &kp L    &mt RIGHT_CONTROL MINUS
&mt LEFT_SHIFT Z    &kp X         &kp C           &kp V            &kp B        &kp LANG1        &kp LANG2      &kp N        &kp M  &kp COMMA  &kp DOT  &mt RSHIFT LEFT_WIN
&kp LEFT_CONTROL    &kt CAPSLOCK  &tog 2          &lt 1 LA(GRAVE)  &lt 2 SPACE  &lt 3 TAB        &kp BACKSPACE  &lt 5 ENTER                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_DOWN2 K_VOLUME_UP2>;
        };

        SHORTCUTS {
            bindings = <
&trans               &kp LC(W)            &kp LA(UP_ARROW)  &kp LA(F4)           &trans                           &trans  &trans              &kp LG(UP_ARROW)  &trans               &trans
&kp LC(LS(TAB))      &kp LA(LEFT_ARROW)   &kp LG(TAB)       &kp LA(RIGHT_ARROW)  &kp LC(TAB)  &trans      &trans  &trans  &kp LG(LEFT_ARROW)  &kp LG(E)         &kp LG(RIGHT_ARROW)  &trans
&kp LA(PRINTSCREEN)  &kp LG(PRINTSCREEN)  &kp LG(LS(S))     &trans               &trans       &trans      &trans  &trans  &trans              &kp LG(M)         &trans               &trans
&trans               &trans               &trans            &trans               &trans       &trans      &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&trans   &trans   &trans  &trans  &trans                           &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &kp K_MUTE      &none   &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans          &trans  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK
&kp F11  &kp F12  &trans  &trans  &trans   &trans          &trans  &trans                                                  &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SYMBOL {
            bindings = <
&trans           &kp DOUBLE_QUOTES  &kp HASH         &kp DOLLAR     &kp PERCENT                          &kp AMPERSAND  &kp SINGLE_QUOTE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&kp EXCLAMATION  &kp SEMI           &kp COLON        &kp BACKSLASH  &kp PIPE     &trans      &trans      &kp AT         &kp ASTERISK      &kp LPAR          &kp RPAR           &kp QUESTION
&kp UNDER        &kp LEFT_BRACE     &kp RIGHT_BRACE  &kp PLUS       &kp GRAVE    &trans      &trans      &kp EQUAL      &kp TILDE         &kp LESS_THAN     &kp GREATER_THAN   &kp SLASH
&trans           &trans             &trans           &kp MINUS      &trans       &trans      &kp DELETE  &trans                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE_BLUETOOTH {
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans    &trans    &none  &trans    &trans
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &mkp MB4  &mkp MB1  &none  &mkp MB2  &mkp MB5
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans    &trans    &none  &trans    &trans
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans        &trans      &trans  &trans                               &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&trans            &trans    &kp PAGE_UP    &trans   &trans                          &trans  &trans          &kp UP_ARROW  &trans           &trans
&kp LEFT_CONTROL  &kp HOME  &kp PAGE_DOWN  &kp END  &trans  &kp K_MUTE      &trans  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &kp RIGHT_CONTROL
&kp LSHFT         &trans    &trans         &trans   &trans  &trans          &trans  &trans  &trans          &trans        &trans           &kp RIGHT_SHIFT
&trans            &trans    &trans         &trans   &trans  &trans          &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        ONISHI_RAYOUT {
            bindings = <
&kp Q               &kp L         &kp U           &kp COMMA  &kp SEMI                                     &kp F   &kp W  &kp R    &kp Y  &kp P
&mt LEFT_CONTROL E  &kp I         &mt LEFT_ALT A  &lt 4 O    &kp PERIOD               &trans      &trans  &kp K   &kp T  &lt 4 N  &kp S  &mt RIGHT_CONTROL H
&kp Z               &kp X         &kp C           &kp V      &mt LEFT_SHIFT LEFT_WIN  &trans      &trans  &kp G   &kp D  &kp M    &kp J  &kp B
&kp LA(GRAVE)       &kt CAPSLOCK  &tog 2          &trans     &trans                   &trans      &trans  &trans                         &kp ESCAPE
            >;
        };
    };
};
